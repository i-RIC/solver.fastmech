
      SUBROUTINE PPFBET (PR,P,Q,TOL,IFLAG,X)
C
C-----------------------------------------------------------------------
C   PPFBET   WRITTEN BY CHARLES P. REEVE, STATISTICAL ENGINEERING
C            DIVISION, NATIONAL BUREAU OF STANDARDS, GAITHERSBURG,
C            MARYLAND 20899
C
C   FOR: EVALUATING THE INVERSE CUMULATIVE DISTRIBUTION FUNCTION
C        (PERCENT POINT FUNCTION) OF THE BETA(P,Q) DISTRIBUTION.
C        FOR A GIVEN PROBABILITY PR.  THE PERCENT POINT X IS COMPUTED 
C        TO A SPECIFIED ABSOLUTE ACCURACY TOL WHEN POSSIBLE. THE
C        METHOD OF BRENT, AS DESCRIBED IN THE REFERENCES BELOW, IS
C        USED TO COMPUTE THE APPROXIMATE ZERO OF I(X,P,Q)-PR WHERE
C        I(X,P,Q) IS THE CUMULATIVE DISTRIBUTION FUNCTION OF THE
C        BETA(P,Q) DISTRIBUTION EVALUATED AT X.  THIS METHOD DOES
C        NOT REQUIRE DERIVATIVES.
C
C   NOTE: THE CONSTANT EPS FOR MACHINE FLOATING POINT PRECISION IS
C         MACHINE DEPENDENT.
C
C   SUBPROGRAMS CALLED: CDFBET (BETA CUMULATIVE DISTRIBUTION FUNCTION)
C
C   CURRENT VERSION COMPLETED OCTOBER 13, 1987
C
C   REFERENCES: 
C
C   1) PRESS, WILLIAM H., FLANNERY, BRIAN P., TEUKOLSKY, SAUL A.,
C      AND VETTERLING, WILLIAM T., 'NUMERICAL RECIPES - THE ART OF
C      SCIENTIFIC COMPUTING', CAMBRIDGE UNIVERSITY PRESS, 1986,
C      PP. 251-254. 
C
C   2) BRENT, RICHARD P., 'ALGORITHMS FOR MINIMIZATION WITHOUT
C      DERIVATIVES', PRENTICE-HALL, 1973, CH. 3-4.
C-----------------------------------------------------------------------
C   DEFINITION OF PASSED PARAMETERS: 
C
C    * PR = A PROBABILITY VALUE IN THE INTERVAL [0,1] (REAL)
C
C     * P = THE FIRST PARAMETER (>0) OF THE BETA(P,Q) DISTRIBUTION
C           (REAL)
C
C     * Q = THE SECOND PARAMETER (>0) OF THE BETA(P,Q) DISTRIBUTION
C           (REAL)
C
C   * TOL = THE REQUIRED ACCURACY (>=1.0E-8) OF THE PERCENT POINT X
C           (REAL)
C
C   IFLAG = ERROR INDICATOR ON OUTPUT (INTEGER)   INTERPRETATION: 
C             0 -> NO ERRORS DETECTED
C           1,2 -> ERROR FLAGS FROM SUBROUTINE CDFBET
C             3 -> PR<0 OR PR>1
C             4 -> P<=0 OR Q<=0
C             5 -> TOL<1.0E-8 
C             6 -> THE CDF'S AT THE ENDPOINTS HAVE THE SAME SIGN - NO 
C                  VALUE OF X IS DEFINED (THIS SHOULD NEVER OCCUR)
C             7 -> MAXIMUM ITERATIONS EXCEEDED - CURRENT VALUE OF X
C                  RETURNED
C
C       X = THE COMPUTED PERCENT POINT (REAL)
C
C   * INDICATES PARAMETERS REQUIRING INPUT VALUES 
C-----------------------------------------------------------------------
C
C--- DEFINE MAXIMUM ITERATIONS AND MACHINE FLOATING POINT PRECISION
C
      DATA ITMAX,EPS / 50,1.0E-12 /
C
C--- CHECK VALIDITY OF INPUT ARGUMENTS
C
      IFLAG = 0
      IF (PR.LT.0.0.OR.PR.GT.1.0) THEN
         IFLAG = 3
         RETURN
C
      ENDIF
      IF (AMIN1(P,Q).LE.0.0) THEN
         IFLAG = 4
         RETURN
C
      ENDIF
      IF (TOL.LT.1.0E-8) THEN 
         IFLAG = 5
         RETURN
C
      ENDIF
      A = 0.0
      B = 1.0
      FA = -PR
      FB = 1.0-PR
C
C--- CHECK FOR ZERO BEING BRACKETED
C
      IF (FB*FA.GT.0.0) THEN
         IFLAG = 6
         RETURN
C
      ENDIF
      FC = FB
      DO 10 ITER = 1, ITMAX
         IF (FB*FC.GT.0.0) THEN
C
C--- RENAME A,B,C AND ADJUST BOUNDING INTERVAL D
C
            C = A
            FC = FA 
            D = B-A 
            E = D
         ENDIF
         IF (ABS(FC).LT.ABS(FB)) THEN
            A = B
            B = C
            C = A
            FA = FB 
            FB = FC 
            FC = FA 
         ENDIF
C
C--- CONVERGENCE CHECK
C
         TOL1 = 2.0*EPS*ABS(B)+0.5*TOL
         XM = 0.5*(C-B)
         IF (ABS(XM).LE.TOL1.OR.FB.EQ.0.0) THEN
            X = B
            RETURN
C
         ENDIF
         IF (ABS(E).GE.TOL1.AND.ABS(FA).GT.ABS(FB)) THEN
C
C--- ATTEMPT INVERSE QUADRATIC INTERPOLATION
C
            S = FB/FA
            IF (A.EQ.C) THEN
               U = 2.0*XM*S
               V = 1.0-S
            ELSE
               V = FA/FC
               R = FB/FC
               U = S*(2.0*XM*V*(V-R)-(B-A)*(R-1.0))
               V = (V-1.0)*(R-1.0)*(S-1.0)
            ENDIF
C
C--- CHECK WHETHER IN BOUNDS
C
            IF (U.GT.0.0) V = -V
            U = ABS(U)
            IF (2.0*U.LT.AMIN1(3.0*XM*V-ABS(TOL1*V),ABS(E*V))) THEN
C
C--- ACCEPT INTERPLATION
C
               E = D
               D = U/V
            ELSE
C
C--- INTERPOLATION FAILED, USE BISECTION
C
               D = XM
               E = D
            ENDIF
         ELSE
C
C--- BOUNDS DECREASING TOO SLOWLY, USE BISECTION
C
            D = XM
            E = D
         ENDIF
C
C--- MOVE LAST BEST GUESS TO A
C
         A = B
         FA = FB
C
C--- EVALUATE NEW TRIAL ZERO
C
         IF (ABS(D).GT.TOL1) THEN
            B = B+D 
         ELSE
            B = B+SIGN(TOL1,XM)
         ENDIF
         CALL CDFBET (B,P,Q,EPS,IFLAG,CDF)
         IF (IFLAG.NE.0) RETURN
         FB = CDF-PR
   10 CONTINUE
      IFLAG = 7
      X = B
      RETURN
C
      END 


	      SUBROUTINE CDFBET (X,P,Q,EPS,IFLAG,CDFX)
C
C-----------------------------------------------------------------------
C   CDFBET   WRITTEN BY CHARLES P. REEVE, STATISTICAL ENGINEERING
C            DIVISION, NATIONAL BUREAU OF STANDARDS, GAITHERSBURG,
C            MARYLAND  20899
C
C   FOR: COMPUTING THE CUMULATIVE DISTRIBUTION FUNCTION OF THE BETA
C        DISTRIBUTION (ALSO KNOWN AS THE INCOMPLETE BETA RATIO) TO A
C        SPECIFIED ACCURACY (TRUNCATION ERROR IN THE INFINITE SERIES).
C        THE ALGORITHM, DESCRIBED IN REFERENCE 2, IS A MODIFICATION OF
C        THE ALGORITHM OF REFERENCE 1.  THREE FEATURES HAVE BEEN ADDED: 
C
C        1) A PRECISE METHOD OF MEETING THE TRUNCATION ACCURACY,
C        2) A CONSTANT W USED IN DETERMINING FOR WHICH X VALUES THE
C           RELATION I(X,P,Q) = 1 - I(1-X,Q,P) IS TO BE USED, AND
C        3) A CONSTANT UFLO >= THE UNDERFLOW LIMIT ON THE COMPUTER.
C
C   SUBPROGRAMS CALLED: DGAMLN (LOG OF GAMMA FUNCTION)
C
C   CURRENT VERSION COMPLETED OCTOBER 24, 1986
C
C   REFERENCES: 
C
C   1) MAJUMDER, K.L. AND BHATTACHARJEE, G.P., 'THE INCOMPLETE BETA
C      INTEGRAL', ALGORITHM AS 63, APPLIED STATISTICS, VOL. 22, NO. 3,
C      1973, PP. 409-411.
C
C   2) REEVE, CHARLES P., 'AN ALGORITHM FOR COMPUTING THE BETA C.D.F. 
C      TO A SPECIFIED ACCURACY', STATISTICAL ENGINEERING DIVISION
C      NOTE 86-3, OCTOBER 1986.
C-----------------------------------------------------------------------
C   DEFINITION OF PASSED PARAMETERS: 
C
C      * X = VALUE AT WHICH THE C.D.F. IS TO BE COMPUTED (REAL)
C
C      * P = FIRST PARAMETER OF THE BETA FUNCTION (>0) (REAL)
C
C      * Q = SECOND PARAMETER OF THE BETA FUNCTION (>0) (REAL)
C
C    * EPS =  THE DESIRED ABSOLUTE ACCURACY OF THE C.D.F. (>0) (REAL) 
C
C    IFLAG = ERROR INDICATOR ON OUTPUT (INTEGER)   INTERPRETATION: 
C            0 -> NO ERRORS DETECTED
C            1 -> EITHER P OR Q OR EPS IS <= UFLO 
C            2 -> NUMBER OF TERMS EVALUATED IN THE INFINITE SERIES
C                 EXCEEDS JMAX
C
C     CDFX = THE C.D.F. EVALUATED AT X (REAL)
C
C   * INDICATES PARAMETERS REQUIRING INPUT VALUES 
C-----------------------------------------------------------------------
C
      LOGICAL LL
      DOUBLE PRECISION DP,DQ,DGAMLN
CCCCC DATA JMAX,W,UFLO / 5000,20.0,1E-100 /
      DATA JMAX,W,UFLO / 5000,20.0,1E-30 /
      CDFX = 0.0
C
C--- CHECK FOR VALIDITY OF ARGUMENTS P, Q, AND EPS
C
      IF (P.LE.UFLO.OR.Q.LE.UFLO.OR.EPS.LE.UFLO) THEN
         IFLAG = 1
         RETURN
      ENDIF
      IFLAG = 0
C
C--- CHECK FOR SPECIAL CASES OF X
C
      IF (X.LE.0.0) RETURN
      IF (X.GE.1.0) THEN
         CDFX = 1.0 
      ELSE
C
C--- SWITCH ARGUMENTS IF NECESSARY
C
         LL = P+W.GE.(P+Q+2.0*W)*X
         IF (LL) THEN
            XY = X
            YX = 1.0-XY
            PQ = P
            QP = Q
         ELSE
            YX = X
            XY = 1.0-YX
            QP = P
            PQ = Q
         ENDIF
C
C--- EVALUATE THE BETA P.D.F. AND CHECK FOR UNDERFLOW
C
         DP = DBLE(PQ-1.0)*DLOG(DBLE(XY))-DGAMLN(PQ)
         DQ = DBLE(QP-1.0)*DLOG(DBLE(YX))-DGAMLN(QP)
         PDFL = SNGL(DGAMLN(PQ+QP)+DP+DQ)
         IF (PDFL.LT.ALOG(UFLO)) THEN
         ELSE
            U = EXP(PDFL)*XY/PQ
            R = XY/YX
   10       IF (QP.LE.1.0) GO TO 20
C
C--- INCREMENT PQ AND DECREMENT QP
C
            IF (U.LE.EPS*(1.0-(PQ+QP)*XY/(PQ+1.0))) GO TO 40
            CDFX = CDFX+U
            PQ = PQ+1.0
            QP = QP-1.0
            U = QP*R*U/PQ
            GO TO 10
   20       V = YX*U
            YXEPS = YX*EPS
C
C--- INCREMENT PQ
C
            DO 30 J = 0, JMAX 
               IF (V.LE.YXEPS) GO TO 40 
               CDFX = CDFX+V
               PQ = PQ+1.0
               V = (PQ+QP-1.0)*XY*V/PQ
   30       CONTINUE
            IFLAG = 2
         ENDIF
   40    IF (.NOT.LL) CDFX = 1.0-CDFX
      ENDIF
      RETURN
      END 

	     DOUBLE PRECISION FUNCTION DGAMLN (X)
C
C-----------------------------------------------------------------------
C   DGAMLN   WRITTEN BY CHARLES P. REEVE, STATISTICAL ENGINEERING
C            DIVISION, NATIONAL BUREAU OF STANDARDS, GAITHERSBURG,
C            MARYLAND  20899
C
C   FOR: COMPUTING THE DOUBLE PRECISION LOG OF THE GAMMA FUNCTION WITH
C        SINGLE PRECISION PARAMETER X>0.  THE MAXIMUM TRUNCATION ERROR
C        IN THE INFINITE SERIES (SEE REFERENCE 1) IS DETERMINED BY THE
C        CONSTANT XMIN.  WHEN X<XMIN A RECURRENCE RELATION IS USED IN 
C        ORDER TO ACHIEVE THE REQUIRED ABSOLUTE ACCURACY.  THE TABLE
C        BELOW GIVES THE MINIMUM VALUE OF X WHICH YIELDS THE CORRES-
C        PONDING ABSOLUTE ACCURACY IN DGAMLN(X) ASSUMING THE MACHINE
C        CARRIES ENOUGH DIGITS WHEN THOSE TO THE LEFT OF THE DECIMAL
C        ARE CONSIDERED (SEE REFERENCE 2 FOR FURTHER DISCUSSION).  IF 
C        THE LATTER CONDITION IS NOT MET, AN ERROR MESSAGE IS PRINTED.
C
C        THE CYBER 180/855 AT NBS CARRIES ABOUT 15 DIGITS IN SINGLE
C        PRECISION, THEREFORE THE PRE-SET VALUE OF ABSACC IS 10**(-15)
C        AND THE CORRESPONDING VALUE OF XMIN IS 6.894.  ON A DIFFERENT
C        MACHINE THESE CONSTANTS SHOULD BE CHANGED ACCORDINGLY.
C
C           XMIN    ACCURACY    XMIN    ACCURACY    XMIN    ACCURACY
C          ------   --------   ------   --------   ------   --------
C           1.357     1E-3      4.592     1E-12    15.539     1E-21
C           2.037     1E-6      6.894     1E-15    23.330     1E-24
C           3.059     1E-9     10.351     1E-18    35.025     1E-27
C
C   NOTE: THIS IS EXACTLY THE SAME SOFTWARE AS SUBROUTINE DGAMLN
C
C   SUBPROGRAMS CALLED: -NONE-
C
C   CURRENT VERSION COMPLETED MAY 1, 1989
C
C   REFERENCES: 
C
C   1) ABRAMOWITZ, MILTON AND STEGUN, IRENE, 'HANDBOOK OF MATHEMATICAL
C      FUNCTIONS', NBS APPLIED MATHEMATICS SERIES 55, NOV. 1970,
C      EQ. 6.1.40, P 257.
C
C   2) REEVE, CHARLES P., 'ACCURATE COMPUTATION OF THE LOG OF THE GAMMA
C      FUNCTION', STATISTICAL ENGINEERING DIVISION NOTE 86-1, OCTOBER 
C      1986.
C-----------------------------------------------------------------------
C
      DOUBLE PRECISION ABSACC,B1,B2,B3,B4,B5,B6,B7,B8,C,DX,Q,R,XMIN,XN
      DATA XMIN,ABSACC / 6.894D0,1.0D-15 /
      DATA C / 0.918938533204672741780329736D0 /
      DATA B1 / 0.833333333333333333333333333D-1 /
      DATA B2 / -0.277777777777777777777777778D-2 /
      DATA B3 / 0.793650793650793650793650794D-3 /
      DATA B4 / -0.595238095238095238095238095D-3 /
      DATA B5 / 0.841750841750841750841750842D-3 /
      DATA B6 / -0.191752691752691752691752692D-2 /
      DATA B7 / 0.641025641025641025641025641D-2 /
      DATA B8 / -0.295506535947712418300653595D-1 /
C
C--- TERMINATE EXECUTION IF X<=0.0
C
      IF (X.LE.0.0) STOP  '*** X<=0.0 IN FUNCTION DGAMLN ***'
      DX = DBLE(X)
      N = MAX0(0,INT(XMIN-DX+1.0D0))
      XN = DX+DBLE(N)
      R = 1.0D0/XN
      Q = R*R
      DGAMLN = R*(B1+Q*(B2+Q*(B3+Q*(B4+Q*(B5+Q*(B6+Q*(B7+Q*B8)))))))+C+
     *   (XN-0.5D0)*DLOG(XN)-XN
C
C--- USE RECURRENCE RELATION WHEN N>0 (X<XMIN)
C
      IF (N.GT.0) THEN
         Q = 1.0D0
         DO 20 I  =  0, N-1
            Q = Q*(DX+DBLE(I))
   20    CONTINUE
         DGAMLN=DGAMLN-DLOG(Q)
      ENDIF
C
C--- PRINT WARNING IF ABSOLUTE ACCURACY HAS NOT BEEN ATTAINED
C
      IF (DGAMLN+ABSACC.EQ.DGAMLN) THEN 
CCCCC    PRINT *,' ********* WARNING FROM FUNCTION DGAMLN *********'
CCCCC    PRINT *,' REQUIRED ABSOLUTE ACCURACY NOT ATTAINED FOR X = ',X
      ENDIF
      RETURN
      END 